/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pdi_practica1;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import org.math.plot.Plot2DPanel;

/**
 *
 * @author Gerardo
 */
public class OTSU extends javax.swing.JFrame {
    private boolean automatico;
    private int umbral;
    private BufferedImage imgOriginal;
    private BufferedImage imagenRes;
    private int width;
    private int height;
    private double[] probs;
    /**
     * Creates new form OTSU
     */
    public OTSU(Plot2DPanel histograma, BufferedImage original, double[] probs) {
        initComponents();
        jSlider1.setValue(0);
        umbral = 0;
        histograma.setSize(465, 117);
        jPanel1.add(histograma);
        //jPanel1.setSize(469, 117);
        //jPanel1.repaint();
        this.width = original.getWidth();
        this.height = original.getHeight();
        this.imgOriginal = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        imgOriginal.setData(original.getData());
        this.imagenRes = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_GRAY);
        imagenRes.setData(imgOriginal.getData());
        this.probs = probs;
       
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
    }
    
    private BufferedImage generarMascara(int umbral){
        BufferedImage nuevaImagen = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_GRAY);
        nuevaImagen.setData(imgOriginal.getData());
        for(int y = 0; y < imgOriginal.getHeight(); y++){
            for(int x = 0; x < imgOriginal.getWidth(); x++){
                if(MascaraRGB.getBlue(imgOriginal.getRGB(x, y)) < umbral){
                    nuevaImagen.setRGB(x, y, MascaraRGB.maskRGB(0, 0, 0));
                }else{
                    nuevaImagen.setRGB(x, y, MascaraRGB.maskRGB(255, 255, 255)); 
                }
            }
        }
        return nuevaImagen;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("Cálculo del umbral manual");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMinimumSize(new java.awt.Dimension(465, 117));
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        jSlider1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(255);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("0");
        jTextField1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField1InputMethodTextChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jCheckBox1.setText("Automático");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Resultado:");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 233, Short.MAX_VALUE)
        );

        jButton1.setText("Segmentar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Optimo:");

        jLabel4.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)
                        .addGap(11, 11, 11)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()){
            automatico = true;
            jPanel2.setVisible(false);
            jLabel3.setVisible(true);
            jLabel4.setVisible(true);
        }else{
            jPanel2.setVisible(true);
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    //Al cambiar el scroll
    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        umbral = jSlider1.getValue();
        jTextField1.setText(umbral+"");
    }//GEN-LAST:event_jSlider1StateChanged

    // Al cambiar jTextField
    private void jTextField1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField1InputMethodTextChanged
        // TODO add your handling code here:
        umbral = Integer.parseInt(jTextField1.getText());
        jSlider1.setValue(umbral);
    }//GEN-LAST:event_jTextField1InputMethodTextChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        double varianza;
        double max = 0.0;
        int optimo = 0;
        if (jCheckBox1.isSelected()){
            for(int i = 1; i < 255; i++){
                varianza = OTSU(i);
                if(varianza > max){
                    max = varianza;
                    optimo = i;
                }
            }
            umbral = optimo;
            jLabel4.setText(umbral+"");
            imagenRes = generarMascara(optimo);
        }else{
            imagenRes = generarMascara(umbral);
        }
        actualizarImagenRes();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void actualizarImagenRes(){
        ImageIcon  ii  = new ImageIcon(imagenRes);
        PanelImagen pImg = new PanelImagen(jPanel3,ii);
        if(jPanel3.getComponentCount() > 0){
            jPanel3.remove(jPanel3.getComponent(0));
            jPanel3.add(pImg);
            jPanel3.repaint();
            this.repaint();
        }else{
            jPanel3.add(pImg);
            this.repaint();
        }
    }
    
    private double OTSU(int t){
        double omega1 = 0.0;
        double omega2 = 0.0;
        double mi1 = 0.0;
        double mi2 = 0.0;
        double imT = 0.0;
        double sigmaCuadr = 0.0;
        
        
        //Cálculo de los omega:
        for(int i = 1; i < 255; i++){
            if(i <= t){
                omega1 += probs[i];
            }else{
                omega2 += probs[i];
            }
        }
        
        //Cálculo de las medidas mi:
        for(int i = 1; i< 255; i++){
            if(i <= t){
                mi1 += (i * probs[i])/omega1;
            }else{
                mi2 += (i * probs[i])/omega2;
            }
        }
        
        //Calculamos la intensidad media total
        imT = (omega1 * mi1) + (omega2 * mi2);
        
        //Calculamos la varianza en el actual t:
        sigmaCuadr = (omega1 * Math.pow((mi1 - imT), 2)) + (omega2 * Math.pow((mi2 - imT), 2));
        return sigmaCuadr;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
